
-- TABLE CLEANUP SCRIPT
set serveroutput on
declare
    table_exists varchar(1) := 'Y';
    sql_command varchar(2000);
begin
   dbms_output.put_line('###Start schema cleanup###');
   for i in ( select 'JOB_POST_SKILL' table_name from dual union all
        select 'JOB_EDUCATION_REQ' table_name from dual union all
	select 'APPLICATION_TRACKING' table_name from dual union all
        select 'APPLICATIONS' table_name from dual union all
	select 'JOBPOST' table_name from dual union all
	select 'JOB_LOCATION' table_name from dual union all
	select 'COMPANY' table_name from dual union all
	select 'SKILLSET' table_name from dual union all
	select 'EDUCATION' table_name from dual union all
	select 'JOB_CATEGORY' table_name from dual union all
	select 'USERS' table_name from dual 
   )
   loop
   dbms_output.put_line('Dropping the table: '||i.table_name);
   begin
       select 'Y' into table_exists
       from USER_TABLES
       where TABLE_NAME=i.table_name;

       sql_command := 'drop table '||i.table_name;
       execute immediate sql_command;
       dbms_output.put_line('Table '||i.table_name||'has been dropped successfully');
       
   exception
       when no_data_found then
           dbms_output.put_line('Table already dropped');
   end;
   end loop;
   dbms_output.put_line('###Schema cleanup successfully completed###');
exception
   when others then
      dbms_output.put_line('Failed to execute code:'||sqlerrm);
end;
/

--CREATE TABLES for Job location
create table Job_Location(Job_Location_Id NUMBER CONSTRAINT Job_Location_PK primary key, 
Country varchar2(80) not null,
States VARCHAR(80) not null, 
City VARCHAR(80) not null,
CONSTRAINT Job_Location_unique UNIQUE (States, City))
/
-- creates table for the different job category
create table Job_Category(Job_Category_ID NUMBER CONSTRAINT Job_Category_PK primary key, 
Job_Type varchar2(40) CONSTRAINT Job_Type_Check CHECK(Job_Type IN ('ONSITE','HYBRID','REMOTE')))
/
-- creates table for the different companies
create table Company(Company_ID NUMBER CONSTRAINT Company_PK primary key, 
Company_Name varchar2(40) not null, 
Company_Description varchar2(40) not null, 
Industy_Type varchar2(40) not null, 
Company_Size Number not null)
/
-- creates table for the different skill sets
create table Skillset(Skillset_ID NUMBER CONSTRAINT Skillset_PK primary key, 
Skill_Name varchar2(40) not null, 
Skill_Type varchar2(40) CONSTRAINT Skill_Type_Check CHECK(Skill_Type IN ('TECHNICAL','SOFTSKILLS')))
/
-- creates table to list education of the user
create table Education(Degree_ID NUMBER CONSTRAINT Degree_PK primary key, 
Degree_Name varchar2(40) not null, 
Degree_Type varchar2(40) not null,
Degree_Completion DATE not null)
/
-- creates table for the job post
create table JOBPOST(JobPost_ID NUMBER CONSTRAINT JobPost_PK primary key, 
Job_Title varchar2(40) not null, 
Creation_Date Date not null,
Job_Description varchar2(400) not null,
Created_By varchar2(40) not null,
Hiring_Status varchar2(40) CONSTRAINT Hiring_Status_Check CHECK(Hiring_Status IN ('AVAILABLE','EXPIRED')),
Job_Location_Id NUMBER NOT NULL CONSTRAINT Job_Location_Id_FK REFERENCES Job_Location(Job_Location_Id) ON DELETE CASCADE,
Job_Category_ID NUMBER NOT NULL CONSTRAINT Job_Category_ID_FK REFERENCES Job_Category(Job_Category_ID) ON DELETE CASCADE,
Job_Company_Id NUMBER NOT NULL CONSTRAINT Job_Company_Id_FK REFERENCES Company(Company_ID) ON DELETE CASCADE)
/
-- creates table for the users
create table USERS(User_ID NUMBER CONSTRAINT User_PK primary key, 
First_Name varchar2(40) not null, 
Last_Name varchar2(40) not null,
Date_of_Birth Date not null,
Gender varchar2(40) CONSTRAINT Gender_Check CHECK(Gender IN ('MALE','FEMALE','OTHER')),
Phone_Number NUMBER NOT NULL CONSTRAINT Phone_Number_Unq UNIQUE,
Role_Type varchar2(40) CONSTRAINT Role_Type_Check CHECK(Role_Type IN ('JOBSEEKER','RECRUITER')))
/
-- creates table for the applications
create table APPLICATIONS(Application_Id NUMBER CONSTRAINT Application_PK primary key, 
Current_Status varchar2(40) CONSTRAINT Current_Status_Check CHECK(Current_Status IN ('APPLIED','HIRED','INTERVIEW_SCHEDULED', 'REJECTED')),
Application_Date Date not null,
Job_Post_ID NUMBER NOT NULL CONSTRAINT Job_Post_ID_FK REFERENCES JobPost(JobPost_ID) ON DELETE CASCADE,
User_Id NUMBER NOT NULL CONSTRAINT User_Id_FK REFERENCES USERS(User_ID) ON DELETE CASCADE)
/
-- creates table for application tracking
create table APPLICATION_TRACKING(Application_Tracking_ID NUMBER CONSTRAINT Application_Tracking_PK primary key, 
Status varchar2(40) CONSTRAINT Status_Check CHECK(Status IN ('APPLIED','HIRED','INTERVIEW_SCHEDULED', 'REJECTED')),
Changed_On Date not null,
Modified_By varchar2(40) not null,
Application_ID NUMBER NOT NULL CONSTRAINT Application_ID_FK REFERENCES APPLICATIONS(Application_ID) ON DELETE CASCADE)
/
-- creates bridge table between job post and education
create table JOB_EDUCATION_REQ(JobPost_ID NUMBER NOT NULL CONSTRAINT JobPost_ID_FK REFERENCES JOBPOST(JobPost_ID) ON DELETE CASCADE,
Degree_ID NUMBER NOT NULL CONSTRAINT Degree_ID_FK REFERENCES EDUCATION(Degree_ID) ON DELETE CASCADE)
/
-- creates a bridge table between job posts and skills
CREATE TABLE JOB_POST_SKILL(JobPostSkill_ID NUMBER NOT NULL CONSTRAINT JobPostSkill_ID_FK REFERENCES JOBPOST(JobPost_ID) ON DELETE CASCADE,
SkillSet_ID NUMBER NOT NULL CONSTRAINT SkillSet_ID_FK REFERENCES Skillset(Skillset_ID) ON DELETE CASCADE)
/
